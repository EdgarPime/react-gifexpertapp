{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAK,SAAAC,GAGEC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAGGqB,EDpBwBO,CAAc5B,GAAjCa,EAJyB,EAI9BN,KAAaa,EAJiB,EAIjBA,QAcpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,WAAf,SAEQH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEKtBkB,EAhCM,WAAM,MAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJC,EAFI,KASvB,OACI,gCACI,8CACA,cAAC,EAAD,CAAa9C,cAAgB8C,IAC7B,uBAEA,6BAIQD,EAAWrB,KAAK,SAAAT,GAAQ,OAEnB,aADD,CACE,EAAD,CAEDA,SAAWA,GADLA,Y,MCpB9BgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a960b8b0.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) =>{\r\n        //console.log(e.target.value);\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n            setCategories( cats => [inputValue, ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    //Necesario tener un elemento que agrupe, en este caso el form\r\n    return (\r\n        <form onSubmit= { handleSubmit } >\r\n            {/* <h1> {inputValue} </h1> */}\r\n            <input \r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=YFcxGXf66U2hVO7sOd5ctEVqr1EYkFT0`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs= data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n        \r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   \r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs( category );\r\n     \r\n    // //Esto quiere decir que el codigo se ejecuta cuando el componente es renderizado por primera vez\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( imgs => {\r\n    //             setImages(imgs) \r\n    //         })\r\n    //         // .then( setImages )\r\n    // }, [category])\r\n\r\n    // images.map( img => ( \r\n    //     <li key={ img.id }> { img.title }</li>\r\n    // ))\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"car-grid\">\r\n                {\r\n                    images.map( ( img ) => ( \r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img} // img={ img } Es lo mismo\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n        .then(imgs => {\r\n\r\n            // setTimeout(() => {\r\n                console.log(imgs);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            // }, 3000);\r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state; // { data: [], loading: true };\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setcategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     // setcategories( ['HunterXHunter',...categories])\r\n    //     setcategories( cats => [...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setcategories }/>\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    // categories.map( (category,i) - i en este caso es la posicion del elemento.\r\n                    //Key debe ser el identificador unico.\r\n                    categories.map( category => \r\n                        // return <li key={ category }> { category } </li>\r\n                         <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}